@page "/registrarPagamento/{idCliente}/{idPedido}/{saldoDevedor}"
@using System.Globalization;

@inject IForlifeVendasApi ForLifeVendasApi
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

<div class="maindiv">
    <h1>Registrar Pagamento</h1>
    <div>
        <label>Saldo devedor: R$ @saldoDevedor</label>
    </div>
    <div class="formRegistroPagamento">
        <EditForm Model="pagamentoRequest" OnSubmit="Enviar">          
            <div>
                <label for="dtPagamento">Data do Pagamento: </label>
                <InputText id="dtPagamento" @bind-Value="dateNasc"/>
            </div>
            
             <div>
                <label for="vlPedido">Valor do Pagamento: </label>
                <InputNumber id="vlPedido" @bind-Value="pagamentoRequest.Valor" @bind-Value:format="F2" />
            </div>

            <button type="submit">Registrar Pagamento</button>

            <div>
                <button type="button" @onclick="NavigateToDetalhesCliente">Cancelar</button>
            </div>
    
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public string idPedido { get; set; }
    [Parameter]
    public string idCliente { get; set; }
    [Parameter]
    public string saldoDevedor { get; set; }
    private string dateNasc { get; set; } = DateTime.Now.ToShortDateString();

    private PutPagamentoPedidoRequest pagamentoRequest { get; set; } = new();

    private async void Enviar()
    {
        if (pagamentoRequest.Valor > Convert.ToDecimal(saldoDevedor))
        {
            await JsRuntime.InvokeVoidAsync("alert", $"Insira um valor de até R$ {saldoDevedor}");
            return;
        }

        pagamentoRequest.IdPedido = idPedido;
        pagamentoRequest.Data = DateTime.Parse(dateNasc);
        var response = await ForLifeVendasApi.PutPagamentoPedido(pagamentoRequest);

        if(!response.IsSuccessStatusCode)
        {
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao registrar pagamento para a venda. Erro: {response.Error.Message}");
            return;
        }

        await JsRuntime.InvokeVoidAsync("alert", "Pedido atualizado com sucesso!");
        NavManager.NavigateTo($"/detalhesCliente/{idCliente}");
    }

    protected void NavigateToDetalhesCliente()
        => NavManager.NavigateTo($"/detalhesCliente/{idCliente}");
}