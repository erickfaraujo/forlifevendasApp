@page "/registrarPagamento/{idCliente}/{idPedido}/{saldoDevedor}"
@using System.Globalization;

@inject IForlifeVendasApi ForLifeVendasApi
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

<div class="maindiv">
    <h1>Registrar Pagamento</h1>
    <div class="mb-3">
        <label>Saldo devedor: R$ @saldoDevedor</label>
    </div>
    <div class="formRegistroPagamento">
        <EditForm Model="registrarPagamentoDto" OnValidSubmit="Enviar" class="col-4">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="input-group mb-2">
                <span class="input-group-text">Data do Pagamento </span>
                <InputText @bind-Value="registrarPagamentoDto.DataPagamento" class="form-control" />
            </div>

            <div class ="input-group mb-3">
                <span class="input-group-text">Valor do Pagamento </span>
                <InputText @bind-Value="registrarPagamentoDto.ValorPagamento" class="form-control" />
            </div>

            <div>
                <button type="submit" class="btn btn-primary">Registrar Pagamento</button>
                <button type="button" class="btn btn-secondary" @onclick="NavigateToDetalhesCliente">Cancelar</button>
            </div>
    
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public string idPedido { get; set; }
    [Parameter]
    public string idCliente { get; set; }
    [Parameter]
    public string saldoDevedor { get; set; }
    
    private GetDetalhesPedidoResponse getDetalhesPedidoResponse { get; set; }
    private RegistrarPagamentoDto registrarPagamentoDto { get; set; } = new();
    private PutPagamentoPedidoRequest pagamentoRequest { get; set; } = new();

    private async void Enviar()
    {
        if (pagamentoRequest.Valor > Convert.ToDecimal(saldoDevedor))
        {
            await JsRuntime.InvokeVoidAsync("alert", $"Insira um valor de até R$ {saldoDevedor}");
            return;
        }

        pagamentoRequest.IdPedido = idPedido;
        pagamentoRequest.Valor = Convert.ToDecimal(registrarPagamentoDto.ValorPagamento);
        pagamentoRequest.Data = DateTime.Parse(registrarPagamentoDto.DataPagamento);
        var response = await ForLifeVendasApi.PutPagamentoPedido(pagamentoRequest);

        if(!response.IsSuccessStatusCode)
        {
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao registrar pagamento para a venda. Erro: {response.Error.Message}");
            return;
        }

        await JsRuntime.InvokeVoidAsync("alert", "Pedido atualizado com sucesso!");
        NavManager.NavigateTo($"/detalhesCliente/{idCliente}");
    }

    protected void NavigateToDetalhesCliente()
        => NavManager.NavigateTo($"/detalhesCliente/{idCliente}");
}