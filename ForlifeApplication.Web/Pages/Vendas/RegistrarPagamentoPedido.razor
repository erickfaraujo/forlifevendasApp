@page "/registrarPagamento/{idCliente}/{idPedido}/{saldoDevedor}"
@using System.Globalization;

@inject IForlifeVendasApi ForLifeVendasApi
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

<div class="maindiv">
    <h1>Registrar Pagamento</h1>
    <div class="mb-3">
        <label>Saldo devedor: R$ @saldoDevedor</label>
    </div>
    <div>
        <EditForm Model="registrarPagamentoDto" OnValidSubmit="Enviar" class="col-4">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="input-group mb-2">
                <span class="input-group-text">Data do Pagamento </span>
                <InputText @bind-Value="registrarPagamentoDto.DataPagamento" class="form-control" />
            </div>

            <div class ="input-group mb-3">
                <span class="input-group-text">Valor do Pagamento </span>
                <InputText @bind-Value="registrarPagamentoDto.ValorPagamento" class="form-control" />
            </div>

            <div class="row">
                <div class="col">
                    <button type="button" class="btn btn-secondary" @onclick="NavigateToDetalhesVenda">Voltar para tela da venda</button>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">Registrar Pagamento</button>
                </div>
            </div>
        </EditForm>
    </div>

    @if (loading)
    {
        <div class="spinner"></div>
    }

</div>

@code {
    [Parameter]
    public string idPedido { get; set; }
    [Parameter]
    public string idCliente { get; set; }
    [Parameter]
    public string saldoDevedor { get; set; }

    private GetDetalhesPedidoResponse getDetalhesPedidoResponse { get; set; }
    private RegistrarPagamentoDto registrarPagamentoDto { get; set; } = new();
    private PutPagamentoPedidoRequest pagamentoRequest { get; set; } = new();
    private bool loading { get; set; }

    private async void Enviar()
    {
        loading = true;

        if (pagamentoRequest.Valor > Convert.ToDecimal(saldoDevedor))
        {
            loading = false;
            await JsRuntime.InvokeVoidAsync("alert", $"Insira um valor de até R$ {saldoDevedor}");
            return;
        }

        pagamentoRequest.IdPedido = idPedido;
        pagamentoRequest.Valor = Convert.ToDecimal(registrarPagamentoDto.ValorPagamento);
        pagamentoRequest.Data = DateTime.Parse(registrarPagamentoDto.DataPagamento);
        var response = await ForLifeVendasApi.PutPagamentoPedido(pagamentoRequest);

        loading = false;

        if(!response.IsSuccessStatusCode)
        {
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao registrar pagamento para a venda. Erro: {response.Error.Content}");
            return;
        }

        await JsRuntime.InvokeVoidAsync("alert", "Pedido atualizado com sucesso!");
        NavigateToDetalhesVenda();
    }

    protected void NavigateToDetalhesVenda()
        => NavManager.NavigateTo($"/detalhesVenda/{idPedido}");
}