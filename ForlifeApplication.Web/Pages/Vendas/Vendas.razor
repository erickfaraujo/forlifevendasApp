@page "/vendas"

@inject IForlifeVendasApi ForLifeVendasApi
@inject IJSRuntime JsRuntime
<div class="maindiv">
    <div class="col-5">
        <h1>Buscar Vendas</h1>
        <form>
            <div class="input-group mb-2">
                <span class="input-group-text">Data Inicio </span>
                <input type="text" @bind="dataInicioPedidoBusca" class="form-control">
            </div>

            <div class="input-group mb-2">
                <span class="input-group-text">Data Final </span>
                <input type="text" @bind="dataFinalPedidoBusca" class="form-control">
            </div>

            <div class="input-group mb-2">
                <span class="input-group-text">Local </span>
                <select @bind="localClienteBusca" class="form-select">
                    <option selected>Todos</option>
                    @if (locais is not null)
                    {
                        foreach (var local in locais.LocaisVenda)
                        {
                            <option value="@local.IdLocal">@local.Descricao</option>
                        }
                    }
                    else
                    {
                        <option value=""></option>
                    }
                </select>
            </div>

            <div class="input-group mb-3">
                <span class="input-group-text">Status de Pagamento </span>
                <select @bind="statusPagamento" class="form-select">
                    <option selected>Ambos</option>
                    <option value="PAGO">Pagos</option>
                    <option value="PENDENTE">Pendentes</option>
                </select>
            </div>
        </form>
        <button @onclick="BuscarVendas" class="btn btn-primary">Buscar Vendas</button>
    </div>
</div>
<div>
    @if (vendas == null)
    {
        <p>@msgTable</p>
    }
    else
    {
        @if (vendas.Pedidos is not null)
        {
            <ExibirVendas Vendas="@vendas" />
        }
        else
        {
            <p>@msgTable</p>
        }
    }
</div>

@code {
    private GetPedidosClienteResponse vendas;
    public string dataInicioPedidoBusca { get; set; }
    public string dataFinalPedidoBusca { get; set; }
    public string localClienteBusca { get; set; }
    public string statusPagamento { get; set; }
    public string msgTable { get; set; } = "Utilize os campos de pesquisa acima";
    private GetLocaisVendaResponse locais;

    protected override async Task OnInitializedAsync()
    {
        await BuscarLocais();
    }

    protected async Task BuscarLocais()
    {
        var response = await ForLifeVendasApi.GetLocaisVenda(null, null);

        if (response.IsSuccessStatusCode)
            locais = response.Content;
        else
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao consultar lista de locais. Erro: {response.Error.Message}");
    }

    protected async Task BuscarVendas()
    {
        vendas = null;
        statusPagamento = statusPagamento is "Ambos" ? null : statusPagamento;
        var request = new GetPedidosRequest(dataInicioPedidoBusca, dataFinalPedidoBusca, statusPagamento, localClienteBusca);
        var response = await ForLifeVendasApi.GetPedidos(request);

        if (response.IsSuccessStatusCode)
            vendas = response.Content;
        else if (response.StatusCode is System.Net.HttpStatusCode.NotFound)
            msgTable = "Nenhuma venda encontrada para os parâmeros informados";
        else
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao consultar vendas. Erro: {response.Error.Message}");
    }

}
