@page "/inserirVenda/{idCliente}/{nomeCliente}"
@using System.Globalization;

@inject IForlifeVendasApi ForLifeVendasApi
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

<div class="maindiv">
    <div class="formCadastroVenda">
        <h1>Inserir Venda</h1>
        <EditForm Model="inserirVendaDto" OnValidSubmit="Enviar" class="col-6">
            <DataAnnotationsValidator/>
            <ValidationSummary />

            <div class="input-group mb-2">
                <span class="input-group-text">Cliente </span>
                <InputSelect @bind-Value="inserirVendaDto.IdCliente" class="form-select">
                    <option value="@idCliente">@nomeCliente</option>
                    @foreach(var cliente in clientes.Clientes)
                    {
                        <option value="@cliente.Pk">@cliente.Nome</option>
                    }
                </InputSelect>
            </div>

            <div class ="input-group mb-2">
                <span class="input-group-text">Valor do pedido </span>
                <InputText @bind-Value="@inserirVendaDto.ValorTotal" @bind-Value:format="F2" class="form-control" />
            </div>

            <div class="input-group mb-2">
                <span class="input-group-text">Valor Pago </span>
                <InputText @bind-Value="@inserirVendaDto.ValorPago" class="form-control" />
            </div>

            <div class="input-group mb-3">
                <span class="input-group-text">Observações </span>
                <InputTextArea @bind-Value="inserirVendaDto.Observacoes" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary">Inserir Venda</button>

            <NavLink href="">
                <button type="button" class="btn btn-secondary">Cancelar</button>
            </NavLink>
    
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public string? idCliente { get; set; }
    [Parameter]
    public string? nomeCliente { get; set; }
    private InserirVendaDto inserirVendaDto { get; set; } = new();
    private PostPedidoRequest pedidoRequest { get; set; } = new();
    private GetClientesResponse clientes;

    protected override async Task OnInitializedAsync()
    {
        var response = ForLifeVendasApi.GetClientes(null, null, null).Result;

        if (response.IsSuccessStatusCode)
            clientes = response.Content;
        else
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao consultar lista de clientes. Erro: {response.Error.Message}");
    }

    private async void Enviar()
    {
        pedidoRequest.IdCliente = idCliente;
        pedidoRequest.ValorTotal = Convert.ToDecimal(inserirVendaDto.ValorTotal);
        pedidoRequest.ValorPago = Convert.ToDecimal(inserirVendaDto.ValorPago);
        var response = await ForLifeVendasApi.PostPedido(pedidoRequest);

        if(!response.IsSuccessStatusCode)
        {
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao cadastrar a venda. Erro: {response.Error.Message}");
            return;
        }

        if (!string.IsNullOrEmpty(response.Content.Id))
        {
            await JsRuntime.InvokeVoidAsync("alert", "Pedido cadastrado com sucesso!");
            NavManager.NavigateTo($"/detalhesCliente/{idCliente}");
        }
    }

}
