@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager
@inject IForlifeVendasApi ForlifeVendasApi;

<table class="table">
    <thead>
        <tr>
            <th>Nome</th>
            <th>Telefone</th>
            <th>Email</th>
            <th>Local</th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    @foreach (var cliente in Clientes.Clientes)
    {
        <tr>
            <td>@cliente.Nome</td>
            <td>@cliente.Telefone</td>
            <td>@cliente.Email</td>
            <td>@cliente.NomeLocal</td>
            <td>
                <div>
                    <a href="/detalhesCliente/@cliente.Pk">
                        <span class="oi oi-eye" />
                    </a>
                </div>
            </td>
            <td>
                <div>
                    <a href="/editarCliente/@cliente.Pk/@cliente.NomeLocal">
                        <span class="oi oi-pencil"/>
                    </a>
                </div>
            </td>
            <td>
                <div>
                    <a href="clientes">
                        <span class="oi oi-trash" @onclick="() => ExcluirCliente(cliente.Nome, cliente.Pk)" />
                    </a>
                </div>
            </td>
        </tr>
    }
</table>

@code {

    [Parameter]
    public GetClientesResponse Clientes { get; set; }

    protected async Task ExcluirCliente(string nomeCliente, string idCliente)
    {
        var confirm = await JsRuntime.InvokeAsync<bool>("confirm", $"Deseja excluir o cliente {nomeCliente}?");

        if(confirm)
        {
            var excluirClienteResponse = await ForlifeVendasApi.DeleteCliente(idCliente);

            if(excluirClienteResponse.IsSuccessStatusCode)
            {
                await JsRuntime.InvokeVoidAsync("alert", "Cliente excluído com sucesso!");
                NavManager.NavigateTo(NavManager.Uri, true);
            }
            else
            {
                await JsRuntime.InvokeVoidAsync("alert", excluirClienteResponse.Error.Content);
            }
        }
    }
}
