@page "/editarCliente/{idCliente}/{nomeCliente}/{telefoneCliente}/{emailCliente}/{dtNascCliente}/{idLocalCliente}/{localCliente}"

@inject IForlifeVendasApi ForLifeVendasApi
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

<div class="maindiv">
    <h1>Editar Cliente</h1>
    <div class="formEditarCliente">
        <EditForm Model="atualizaClienteRequest" OnSubmit="Enviar">
            <DataAnnotationsValidator/>
            <div>
                <label for="nome">Nome: </label>
                <InputText id="nome" @bind-Value="nomeCliente"></InputText>
            </div>

            <div>
                <label for="telefone">Telefone: </label>
                <InputText id="telefone" @bind-Value="telefoneCliente"></InputText>
            </div>

            <div>
                <label for="email">Email: </label>
                <InputText id="email" @bind-Value="emailCliente"></InputText>
            </div>

            <div>
                <label for="dtNasc">Data de Nascimento: </label>
                <InputText id="dtNasc" @bind-Value="dtNascCliente"></InputText>
            </div>

            <div>
                <label for="local">Local: </label>
                <InputSelect id="local" @bind-Value="idLocalCliente">
                    <option value="@idLocalCliente"> @localCliente</option>
                     @foreach(var local in locais.LocaisVenda)
                     {
                         <option value="@local.IdLocal">@local.Descricao</option>
                     }
                </InputSelect>
            </div>

            <button type="submit">Atualizar</button>

            <NavLink href="clientes">
                <button type="button">Cancelar</button>
            </NavLink>
    
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public string idCliente { get; set; }
    [Parameter]
    public string nomeCliente { get; set; }
    [Parameter]
    public string telefoneCliente { get; set; }
    [Parameter]
    public string emailCliente { get; set; }
    [Parameter]
    public string dtNascCliente { get; set; }
    [Parameter]
    public string idLocalCliente { get; set; }
    [Parameter]
    public string localCliente { get; set; }

    private PutClienteRequest atualizaClienteRequest { get; set; } = new();
    private GetAllLocaisVendaResponse locais;

    protected override async Task OnInitializedAsync()
    {
        var response = ForLifeVendasApi.GetLocaisVenda().Result;

        if (response.IsSuccessStatusCode)
            locais = response.Content;
        else
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao consultar lista de locais. Erro: {response.Error.Message}");
    }

    private async void Enviar()
    {
        atualizaClienteRequest.Id = idCliente;
        atualizaClienteRequest.Nome = nomeCliente;
        atualizaClienteRequest.Telefone = telefoneCliente;
        atualizaClienteRequest.Email = emailCliente;
        atualizaClienteRequest.Dtnascimento = dtNascCliente;
        atualizaClienteRequest.IdlocalVenda = idLocalCliente;
        var response = await ForLifeVendasApi.PutCliente(atualizaClienteRequest);

        if(response.IsSuccessStatusCode)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Cliente atualizado com sucesso!");
            NavManager.NavigateTo("/clientes");
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao editar cliente. Erro: {response.Error.Message}");
            return;
        }
    }

}
