@page "/cadastroCliente"

@inject IForlifeVendasApi ForLifeVendasApi
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

<div class="head">
    <h1>Cadastrar Cliente</h1>
</div>

<div class="content">
    
    <EditForm Model="@cadastrarClienteDto" OnValidSubmit="Enviar" class="col-6">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="input-group mb-2">
            <span class="input-group-text">Nome </span>
            <InputText id="nome" @bind-Value="@cadastrarClienteDto.Nome" class="form-control" />
        </div>

        <div class="input-group mb-2">
            <span class="input-group-text">Telefone </span>
            <InputText id="telefone" @bind-Value="@cadastrarClienteDto.Telefone" class="form-control" />
        </div>

        <div class="input-group mb-2">
            <span class="input-group-text">Email </span>
            <InputText id="email" @bind-Value="@cadastrarClienteDto.Email" class="form-control" />
        </div>

        <div class="input-group mb-2">
            <span class="input-group-text">Data de Nascimento </span>
            <InputText id="dtNascimento" @bind-Value="@cadastrarClienteDto.DataNascimento" class="form-control" />
        </div>

        <div class="input-group mb-2">
            <span class="input-group-text">Local </span>
            <InputSelect id="local" @bind-Value="@cadastrarClienteDto.IdlocalVenda" class="form-select">
                <option selected>Selecione um local</option>
                @foreach(var local in locais.LocaisVenda)
                {
                    <option value="@local.IdLocal">@local.Descricao</option>
                }
            </InputSelect>
        </div>

        <div class="input-group mb-3">
            <span class="input-group-text">Observações </span>
            <InputTextArea id="observacoes" @bind-Value="@cadastrarClienteDto.Observacao" placeholder="Insira aqui medidas ou outras informações sobre o cliente" class="form-control" />
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Cadastrar</button>
            <NavLink href="clientes">
                <button type="button" class="btn btn-secondary">Cancelar</button>
            </NavLink>
        </div>
    </EditForm>
</div>

@if(loading)
{
    <div class="spinner"></div>
}

@code {
    private CadastrarClienteDto cadastrarClienteDto { get; set; } = new();
    private PostClienteRequest postClienteRequest { get; set; } = new();
    private GetLocaisVendaResponse locais;
    private bool loading { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = ForLifeVendasApi.GetLocaisVenda(null, null).Result;

        if (response.IsSuccessStatusCode)
            locais = response.Content;
        else
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao consultar lista de locais. Erro: {response.Error.Message}");
    }

    private async Task Enviar()
    {
        loading = true;
        postClienteRequest.Nome = cadastrarClienteDto.Nome;
        postClienteRequest.Telefone = cadastrarClienteDto.Telefone;
        postClienteRequest.Email = cadastrarClienteDto.Email;
        postClienteRequest.Observacao = cadastrarClienteDto.Observacao;
        postClienteRequest.IdlocalVenda = cadastrarClienteDto.IdlocalVenda;

        if (cadastrarClienteDto.DataNascimento is not null)
            postClienteRequest.DataNascimento = DateTime.Parse(cadastrarClienteDto.DataNascimento);

        var response = await ForLifeVendasApi.PostCliente(postClienteRequest);

        loading = false;

        if (!response.IsSuccessStatusCode)
        {
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao cadastrar cliente. Erro: {response.Error.Message}");
            return;
        }

        await JsRuntime.InvokeVoidAsync("alert", "Cliente cadastrado com sucesso!");
        NavManager.NavigateTo("/clientes");
    }
}
