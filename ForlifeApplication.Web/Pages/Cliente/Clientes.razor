@page "/clientes"

@inject IForlifeVendasApi ForLifeVendasApi
@inject IJSRuntime JsRuntime
<div class="maindiv">
    <div class ="col-5">
        <h1>Clientes</h1>
        <form>
            <div class="input-group mb-2">
                <span class="input-group-text">Nome </span>
                <input type="text" @bind="nomeClienteBusca" class="form-control">
            </div>

            <div class="input-group mb-2">
                <span class="input-group-text">Telefone </span>
                <input type="text" @bind="telefoneClienteBusca" class="form-control">
            </div>

            <div class="input-group mb-3">
                <span class="input-group-text">Local </span>
                <select @bind="localClienteBusca" class="form-select">
                    <option selected>Todos</option>
                    @if (locais is not null)
                    {
                        foreach (var local in locais.LocaisVenda)
                        {
                            <option value="@local.IdLocal">@local.Descricao</option>
                        }
                    }
                    else
                    {
                        <option value=""></option>
                    }
                </select>
            </div>
        </form>
        <button @onclick="BuscarClientes" class="btn btn-primary">Buscar Clientes</button>
    </div>

    <div>
        <NavLink href="cadastroCliente" aria-hidden="true">
            <button  class ="btn btn-success">Novo Cliente</button>
        </NavLink>
    </div>
</div>

@if (clientes is null && !error)
{
    <div class="spinner"></div>
}
else
{
    <div>
        @if (clientes == null)
        {
            <p>Nenhum cliente encontrado, utilize o campo de pesquisa acima</p>
        }
        else
        {
            @if (clientes.Clientes is not null)
            {
                <ExibirClientes Clientes="@clientes" />
            }
            else
            {
                <p>Nenhum cliente encontrado, utilize o campo de pesquisa acima</p>
            }
        }
    </div>
}

@code {
    private GetClientesResponse clientes;
    public string nomeClienteBusca { get; set; }
    public string telefoneClienteBusca { get; set; }
    public string localClienteBusca { get; set; }
    private GetLocaisVendaResponse locais;
    private bool error { get; set; } = true;

    protected override async Task OnInitializedAsync()
        => await BuscarLocais();

    protected async Task BuscarLocais()
    {
        var response = await ForLifeVendasApi.GetLocaisVenda(null, null);

        if (response.IsSuccessStatusCode)
            locais = response.Content;
        else
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao consultar lista de locais. Erro: {response.Error.Message}");
    }

    protected async Task BuscarClientes()
    {
        error = false;
        clientes = null;

        if (localClienteBusca is "Todos") localClienteBusca = null;

        var response = await ForLifeVendasApi.GetClientes(nomeClienteBusca, telefoneClienteBusca, localClienteBusca);

        if (response.IsSuccessStatusCode)
        {
            clientes = response.Content;
        }
        else if (response.StatusCode is System.Net.HttpStatusCode.NotFound)
        {
            error = true;
            await JsRuntime.InvokeVoidAsync("alert", "Nenhum cliente encontrado! Refaça a pesquisa ou cadastre o seu primeiro cliente");
        }
        else
        {
            error = true;
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao consultar clientes. Erro: {response.Error.Message}");
        }
    }
}