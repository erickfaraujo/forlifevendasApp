@page "/cadastroLocal"

@inject IForlifeVendasApi ForLifeVendasApi
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

<div class="maindiv">
    <div class="cadastrarLocaisdiv">
        <h1>Cadastrar novo local</h1>
        <EditForm Model="localRequest" OnValidSubmit="CadastrarLocaVenda">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="input-group mb-2">
                <span class="input-group-text">Local </span>
                <InputText id="descricao" @bind-Value="localRequest.Descricao" class="form-control"/>
            </div>

            <div class="input-group mb-2">
                <span class="input-group-text">Endereço </span>
                <InputText id="endereco" @bind-Value="localRequest.Endereco" class="form-control" />
            </div>

            <div class="input-group mb-3">
                <span class="input-group-text">Referência </span>
                <InputText id="referencia" @bind-Value="localRequest.Referencia" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary">Cadastrar</button>

            <NavLink href="locais">
                <button type="button" class="btn btn-secondary">Cancelar</button>
            </NavLink>

        </EditForm>
    </div>
</div>

@code {
    public PostLocalRequest localRequest { get; set; } = new();

    protected async Task CadastrarLocaVenda()
    {
        var response = await ForLifeVendasApi.PostLocal(localRequest);

        if (!response.IsSuccessStatusCode)
        {
            await JsRuntime.InvokeVoidAsync("alert", $"Falha ao cadastrar local de venda. Erro: {response.Error.Message}");
            return;
        }

        await JsRuntime.InvokeVoidAsync("alert", "Local cadastrado com sucesso!");
    }
}
